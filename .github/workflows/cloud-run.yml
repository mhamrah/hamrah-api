name: Cloud Run CI/CD

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  PROJECT_ID: hamrah-ai
  REGION: us-central1
  SERVICE: hamrah-api
  REGISTRY: us-central1-docker.pkg.dev

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.WIF_PROVIDER }}
          service_account: ${{ secrets.GCP_SA_EMAIL }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure Docker auth
        run: gcloud auth configure-docker ${{ env.REGISTRY }} --quiet

      - name: Build and push image
        run: |
          IMAGE="${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/hamrah/${{ env.SERVICE }}:${{ github.sha }}"
          docker build -t "$IMAGE" .
          docker push "$IMAGE"
          echo "IMAGE=$IMAGE" >> $GITHUB_ENV

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy ${{ env.SERVICE }} \
            --project ${{ env.PROJECT_ID }} \
            --region ${{ env.REGION }} \
            --image ${{ env.IMAGE }} \
            --platform managed \
            --allow-unauthenticated \
            --min-instances 0 \
            --max-instances 10 \
            --memory 512Mi \
            --cpu 1 \
            --port 8080 \
            --no-cpu-throttling \
            --startup-probe http \
            --startup-probe-path /healthz \
            --startup-probe-initial-delay-seconds 10 \
            --startup-probe-period-seconds 10 \
            --startup-probe-timeout-seconds 3 \
            --liveness-probe http \
            --liveness-probe-path /healthz \
            --liveness-probe-initial-delay-seconds 30 \
            --liveness-probe-period-seconds 30 \
            --liveness-probe-timeout-seconds 3 \
            --set-env-vars "RUST_LOG=info" \
            --set-secrets "DATABASE_URL=DATABASE_URL:latest,JWT_SECRET=JWT_SECRET:latest"
