name: Cloudflare Workers CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  detect-changes:
    name: Detect Worker Changes
    runs-on: ubuntu-latest
    outputs:
      api: ${{ steps.api.outputs.changed }}
      pipeline: ${{ steps.pipeline.outputs.changed }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Detect API Worker Changes
        id: api
        run: |
          if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -q '^workers/api/'; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Detect Pipeline Worker Changes
        id: pipeline
        run: |
          if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -q '^workers/link-pipeline/'; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

  test-api:
    name: Test Rust API Worker
    runs-on: ubuntu-latest
    needs: detect-changes
    if: needs.detect-changes.outputs.api == 'true'
    env:
      CARGO_TERM_COLOR: always
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Rust Toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable

      - name: Cache Cargo dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            workers/api/target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('workers/api/Cargo.lock') }}

      - name: Check formatting
        run: cd workers/api && cargo fmt -- --check

      - name: Run Clippy (fail on warnings)
        run: cd workers/api && cargo clippy -- -D warnings

      - name: Run tests
        run: cd workers/api && cargo test --verbose

      - name: Upload API build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: api-target
          path: workers/api/target

  test-pipeline:
    name: Test Link Pipeline Worker
    runs-on: ubuntu-latest
    needs: detect-changes
    if: needs.detect-changes.outputs.pipeline == 'true'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: "workers/link-pipeline/package-lock.json"

      - name: Install dependencies
        run: npm ci
        working-directory: workers/link-pipeline

      - name: Type check
        run: npm run type-check
        working-directory: workers/link-pipeline

      - name: Build
        run: npm run build
        working-directory: workers/link-pipeline

      - name: Upload Pipeline build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: pipeline-dist
          path: workers/link-pipeline/dist

  deploy-api-preview:
    name: Deploy API Worker Preview
    runs-on: ubuntu-latest
    needs: [detect-changes, test-api]
    if: github.event_name == 'pull_request' && needs.detect-changes.outputs.api == 'true'
    env:
      CARGO_TERM_COLOR: always
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Rust Toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable

      - name: Cache Cargo dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            workers/api/target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('workers/api/Cargo.lock') }}

      - name: Download API build artifacts
        uses: actions/download-artifact@v4
        with:
          name: api-target
          path: workers/api/target

      - name: Install worker-build if needed
        run: which worker-build || cargo install -q worker-build

      - name: Deploy API Preview
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: deploy --config wrangler.preview.toml
          workingDirectory: workers/api

  deploy-pipeline-preview:
    name: Deploy Pipeline Worker Preview
    runs-on: ubuntu-latest
    needs: [detect-changes, test-pipeline]
    if: github.event_name == 'pull_request' && needs.detect-changes.outputs.pipeline == 'true'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: "workers/link-pipeline/package-lock.json"

      - name: Install dependencies
        run: npm ci
        working-directory: workers/link-pipeline

      - name: Download Pipeline build artifacts
        uses: actions/download-artifact@v4
        with:
          name: pipeline-dist
          path: workers/link-pipeline/dist

      - name: Deploy Pipeline Preview
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: deploy --env preview
          workingDirectory: workers/link-pipeline

  deploy-api-production:
    name: Deploy API Worker Production
    runs-on: ubuntu-latest
    needs: [detect-changes, test-api]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push' && needs.detect-changes.outputs.api == 'true'
    env:
      CARGO_TERM_COLOR: always
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Rust Toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable

      - name: Cache Cargo dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            workers/api/target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('workers/api/Cargo.lock') }}

      - name: Download API build artifacts
        uses: actions/download-artifact@v4
        with:
          name: api-target
          path: workers/api/target

      - name: Install worker-build if needed
        run: which worker-build || cargo install -q worker-build

      - name: Deploy API Production
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: deploy
          workingDirectory: workers/api

  deploy-pipeline-production:
    name: Deploy Pipeline Worker Production
    runs-on: ubuntu-latest
    needs: [detect-changes, test-pipeline]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push' && needs.detect-changes.outputs.pipeline == 'true'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: "workers/link-pipeline/package-lock.json"

      - name: Install dependencies
        run: npm ci
        working-directory: workers/link-pipeline

      - name: Download Pipeline build artifacts
        uses: actions/download-artifact@v4
        with:
          name: pipeline-dist
          path: workers/link-pipeline/dist

      - name: Deploy Pipeline Production
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: deploy
          workingDirectory: workers/link-pipeline
