# .github/workflows/deploy.yml

name: Deploy Rust Worker to Cloudflare

# Controls when the workflow will run
on:
  # Triggers the workflow on push events but only for the "main" branch
  push:
    branches: ["main"]

  # Triggers the workflow on pull request events targeted at the "main" branch
  pull_request:
    branches: ["main"]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # Job for testing and linting (runs on all events)
  test:
    runs-on: ubuntu-latest
    
    env:
      CARGO_TERM_COLOR: always

    steps:
      # 1. Checkout repository code
      - name: Checkout 🛎️
        uses: actions/checkout@v4

      # 2. Setup Rust toolchain
      - name: Setup Rust Toolchain 🦀
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
      
      # 3. Cache Rust dependencies for faster builds
      - name: Cache Cargo Dependencies 💾
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      # 4. Check formatting
      - name: Check Formatting 📝
        run: cargo fmt -- --check

      # 5. Run Clippy for linting (fail on warnings)
      - name: Run Linter (Clippy) 📎
        run: cargo clippy -- -D warnings

      # 6. Run tests
      - name: Run Tests 🧪
        run: cargo test --verbose

  # Job for preview deployment (runs only on PRs)
  deploy-preview:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'pull_request'
    
    env:
      CARGO_TERM_COLOR: always

    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4

      - name: Setup Rust Toolchain 🦀
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
      
      - name: Cache Cargo Dependencies 💾
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      # Install worker-build if not cached
      - name: Install worker-build 🔧
        run: which worker-build || cargo install -q worker-build

      # Deploy to preview environment
      - name: Deploy Preview 🚀
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: deploy --config wrangler.preview.toml

  # Job for production deployment (runs only on main branch push)
  deploy-production:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    env:
      CARGO_TERM_COLOR: always

    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4

      - name: Setup Rust Toolchain 🦀
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
      
      - name: Cache Cargo Dependencies 💾
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      # Install worker-build if not cached
      - name: Install worker-build 🔧
        run: which worker-build || cargo install -q worker-build

      # Deploy to production
      - name: Deploy Production 🚀
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: deploy --config wrangler.toml